{"ast":null,"code":"import { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { select } from '@ngrx/store';\nimport { selectAllUser, selectUserTotal, selectUserError, selectUserLoading } from '../state/user.selectors';\nimport { merge, Subject, Subscription } from 'rxjs';\nimport { tap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { UserLoadAction } from '../state/user.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/paginator\";\n\nfunction UserTableComponent_ng_container_13_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columnName_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(columnName_r7);\n  }\n}\n\nfunction UserTableComponent_ng_container_13_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r11 = ctx.$implicit;\n    const columnName_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r11[columnName_r7]);\n  }\n}\n\nfunction UserTableComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 14);\n    i0.ɵɵtemplate(1, UserTableComponent_ng_container_13_th_1_Template, 2, 1, \"th\", 15);\n    i0.ɵɵtemplate(2, UserTableComponent_ng_container_13_td_2_Template, 2, 1, \"td\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const columnName_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", columnName_r7);\n  }\n}\n\nfunction UserTableComponent_td_15_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵtext(2, \"No Users\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction UserTableComponent_td_15_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 21);\n    i0.ɵɵtext(2, \"System Failure\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 20);\n    i0.ɵɵtext(4, \"Error\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 22);\n    i0.ɵɵlistener(\"click\", function UserTableComponent_td_15_ng_container_3_Template_span_click_5_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.retry();\n    });\n    i0.ɵɵtext(6, \"Retry\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction UserTableComponent_td_15_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 21);\n    i0.ɵɵtext(2, \"Retrieving data...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction UserTableComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtemplate(1, UserTableComponent_td_15_ng_container_1_Template, 3, 0, \"ng-container\", 11);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵtemplate(3, UserTableComponent_td_15_ng_container_3_Template, 7, 0, \"ng-container\", 11);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵtemplate(5, UserTableComponent_td_15_ng_container_5_Template, 3, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"colspan\", ctx_r2.displayedColumns.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(2, 4, ctx_r2.error$) && !ctx_r2.loading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 6, ctx_r2.error$) && !ctx_r2.loading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loading);\n  }\n}\n\nfunction UserTableComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 23);\n  }\n}\n\nfunction UserTableComponent_ng_container_17_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\n\nfunction UserTableComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, UserTableComponent_ng_container_17_tr_1_Template, 1, 0, \"tr\", 24);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r4.displayedColumns);\n  }\n}\n\nfunction UserTableComponent_ng_container_18_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 27);\n  }\n}\n\nconst _c0 = function () {\n  return [\"noData\"];\n};\n\nfunction UserTableComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, UserTableComponent_ng_container_18_tr_1_Template, 1, 0, \"tr\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\n\nconst _c1 = function () {\n  return [5, 10, 25, 100];\n};\n\nexport class UserTableComponent {\n  constructor(store) {\n    this.store = store;\n    this.displayedColumns = ['Id', 'FullName', 'Country', 'Role', 'Email'];\n    this.noData = [{}];\n    this.defaultSort = {\n      active: 'role',\n      direction: 'asc'\n    };\n    this.filterSubject = new Subject();\n    this.subscription = new Subscription();\n    this.filter = \"\";\n  }\n\n  ngOnInit() {\n    this.store.pipe(select(selectAllUser)).subscribe(users => this.initializeData(users));\n    this.store.pipe(select(selectUserTotal)).subscribe(total => this.userTotal = total);\n    this.subscription.add(this.store.pipe(select(selectUserLoading)).subscribe(loading => {\n      if (loading) {\n        this.dataSource = new MatTableDataSource(this.noData);\n      }\n\n      this.loading = loading;\n    }));\n    this.error$ = this.store.pipe(select(selectUserError));\n  }\n\n  ngAfterViewInit() {\n    this.loadUsers();\n    let filter$ = this.filterSubject.pipe(debounceTime(150), distinctUntilChanged(), tap(value => {\n      this.paginator.pageIndex = 0;\n      this.filter = value;\n    }));\n    let sort$ = this.sort.sortChange.pipe(tap(() => this.paginator.pageIndex = 0));\n    this.subscription.add(merge(filter$, sort$, this.paginator.page).pipe(tap(() => this.loadUsers())).subscribe());\n  }\n\n  loadUsers() {\n    this.store.dispatch(new UserLoadAction({\n      filter: this.filter.toLocaleLowerCase(),\n      pageIndex: this.paginator.pageIndex,\n      pageSize: this.paginator.pageSize,\n      sortDirection: this.sort.direction,\n      sortField: this.sort.active\n    }));\n  }\n\n  initializeData(users) {\n    this.dataSource = new MatTableDataSource(users.length ? users : this.noData);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  retry() {\n    this.loadUsers();\n  }\n\n}\n\nUserTableComponent.ɵfac = function UserTableComponent_Factory(t) {\n  return new (t || UserTableComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nUserTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserTableComponent,\n  selectors: [[\"app-user-table\"]],\n  viewQuery: function UserTableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 21,\n  vars: 12,\n  consts: [[1, \"wrapper\"], [1, \"\"], [1, \"dc-h3\", \"header\"], [\"appearance\", \"standard\"], [\"matInput\", \"\", \"placeholder\", \"Type to search\", 3, \"keyup\"], [\"input\", \"\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortDisableClear\", \"true\", 3, \"dataSource\", \"matSortActive\", \"matSortDirection\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"matColumnDef\", \"noData\"], [\"mat-cell\", \"\", \"class\", \"dc-label no-data-cell\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [4, \"ngIf\"], [\"aria-label\", \"Select page\", \"showFirstLastButtons\", \"\", 3, \"length\", \"pageSize\", \"pageSizeOptions\"], [\"paginator\", \"\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-cell\", \"\", 1, \"dc-label\", \"no-data-cell\"], [1, \"dc-content\"], [1, \"dc-label\"], [1, \"retry\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", \"class\", \"user-row\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-row\", \"\", 1, \"user-row\"], [\"mat-row\", \"\", \"class\", \"no-data-row\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-row\", \"\", 1, \"no-data-row\"]],\n  template: function UserTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-card\", 1);\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"User Management Pagination\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Filter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 4, 5);\n      i0.ɵɵlistener(\"keyup\", function UserTableComponent_Template_input_keyup_9_listener($event) {\n        return ctx.filterSubject.next($event.target.value);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1);\n      i0.ɵɵelementStart(12, \"table\", 6);\n      i0.ɵɵtemplate(13, UserTableComponent_ng_container_13_Template, 3, 1, \"ng-container\", 7);\n      i0.ɵɵelementContainerStart(14, 8);\n      i0.ɵɵtemplate(15, UserTableComponent_td_15_Template, 6, 8, \"td\", 9);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(16, UserTableComponent_tr_16_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵtemplate(17, UserTableComponent_ng_container_17_Template, 2, 1, \"ng-container\", 11);\n      i0.ɵɵtemplate(18, UserTableComponent_ng_container_18_Template, 2, 2, \"ng-container\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"mat-paginator\", 12, 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" Users (\", ctx.userTotal, \") \");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"matSortActive\", ctx.defaultSort.active)(\"matSortDirection\", ctx.defaultSort.direction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.displayedColumns);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userTotal && !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.userTotal || ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"length\", ctx.userTotal)(\"pageSize\", 10)(\"pageSizeOptions\", i0.ɵɵpureFunction0(11, _c1));\n    }\n  },\n  directives: [i2.MatCard, i3.MatFormField, i3.MatLabel, i4.MatInput, i5.MatTable, i6.NgForOf, i5.MatColumnDef, i5.MatCellDef, i5.MatHeaderRowDef, i6.NgIf, i7.MatPaginator, i5.MatHeaderCellDef, i5.MatHeaderCell, i5.MatCell, i5.MatHeaderRow, i5.MatRowDef, i5.MatRow],\n  pipes: [i6.AsyncPipe],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  margin-top: 25px;\\n  width: 75%;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.mat-form-field[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  width: 100%;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  width: 25%;\\n}\\n\\n.wrapper[_ngcontent-%COMP%] {\\n  font-size: 13px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBOztFQUVFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJ1c2VyLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gIG1hcmdpbi10b3A6IDI1cHg7XG4gIHdpZHRoOiA3NSU7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRkLFxudGgge1xuICB3aWR0aDogMjUlO1xufVxuXG4ud3JhcHBlciB7XG4gIGZvbnQtc2l6ZTogMTNweCAhaW1wb3J0YW50O1xufVxuIl19 */\"]\n});","map":{"version":3,"sources":["/Users/sandeepkv/Desktop/users-datatable/user-management-demo/src/app/user-table/user-table.component.ts","/Users/sandeepkv/Desktop/users-datatable/user-management-demo/src/app/user-table/user-table.component.html"],"names":[],"mappings":"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","sourcesContent":["import { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AfterViewInit, Component, ViewChild, OnInit, ElementRef,OnDestroy } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { UserDataInterface } from '../models/user.model';\nimport { Store, select } from '@ngrx/store';\nimport { selectAllUser, selectUserTotal, selectUserError, selectUserLoading } from '../state/user.selectors';\nimport { Observable, merge, Subject, Subscription } from 'rxjs';\nimport { tap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { GlobalState } from '../state/global.state';\nimport { UserLoadAction } from '../state/user.actions';\nimport { UserParams } from '../models/user-params';\n@Component({\n  selector: 'app-user-table',\n  templateUrl: './user-table.component.html',\n  styleUrls: ['./user-table.component.css'],\n})\nexport class UserTableComponent implements OnInit, OnDestroy, AfterViewInit {\n  public displayedColumns: string[] = ['Id', 'FullName', 'Country', 'Role', 'Email'];\n  public dataSource!: MatTableDataSource<UserDataInterface>;\n  public userTotal: number;\n  public noData: UserDataInterface[] = [<UserDataInterface>{}];\n  public loading: boolean;\n  public error$: Observable<boolean>;\n  public defaultSort: Sort = { active: 'role', direction: 'asc' };\n  public filterSubject = new Subject<string>();\n  private subscription: Subscription = new Subscription();\n  private filter: string = \"\";\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public store: Store<GlobalState>) {\n  }\n  public ngOnInit(): void {\n    this.store.pipe(select(selectAllUser)).subscribe(users => this.initializeData(users));\n    this.store.pipe(select(selectUserTotal)).subscribe(total => this.userTotal = total);\n    this.subscription.add(this.store.pipe(select(selectUserLoading)).subscribe(loading => {\n      if (loading) {\n        this.dataSource = new MatTableDataSource(this.noData);\n      }\n      this.loading = loading;\n    }));\n    this.error$ = this.store.pipe(select(selectUserError));\n  }\n\n  public ngAfterViewInit(): void {\n    this.loadUsers();\n    let filter$ = this.filterSubject.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap((value: string) => {\n        this.paginator.pageIndex = 0;\n        this.filter = value;\n      })\n    );\n\n    let sort$ = this.sort.sortChange.pipe(tap(() => this.paginator.pageIndex = 0));\n\n    this.subscription.add(merge(filter$, sort$, this.paginator.page).pipe(\n      tap(() => this.loadUsers())\n    ).subscribe());\n  }\n\n  private loadUsers(): void {\n    this.store.dispatch(new UserLoadAction(\n      <UserParams>{\n        filter: this.filter.toLocaleLowerCase(),\n        pageIndex: this.paginator.pageIndex,\n        pageSize: this.paginator.pageSize,\n        sortDirection: this.sort.direction,\n        sortField: this.sort.active\n      }\n    ));\n  }\n\n  private initializeData(users: UserDataInterface[]): void {\n    this.dataSource = new MatTableDataSource(users.length ? users : this.noData);\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public retry(): void { \n    this.loadUsers();\n  }\n\n}\n","<div class=\"wrapper\">\n  <mat-card class=\"\"\n    ><h2 >User Management Pagination</h2>\n    <div class=\"dc-h3 header\">\n      Users ({{userTotal}})\n    </div>\n    <mat-form-field appearance=\"standard\">\n      <mat-label>Filter</mat-label>\n      <input\n        matInput\n        (keyup)=\"filterSubject.next($event.target.value)\"\n        placeholder=\"Type to search\"\n        #input\n      />\n    </mat-form-field>\n    <div class=\"\">\n      <table mat-table [dataSource]=\"dataSource\" matSort [matSortActive]=\"defaultSort.active\" [matSortDirection]=\"defaultSort.direction\"  matSortDisableClear=\"true\" >\n\n        \n        <ng-container *ngFor=\"let columnName of displayedColumns\" [matColumnDef]=\"columnName\">\n          <th mat-header-cell *matHeaderCellDef>{{ columnName }}</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row[columnName] }}</td>\n        </ng-container>\n\n          <ng-container matColumnDef=\"noData\">\n            <td mat-cell class=\"dc-label no-data-cell\" *matCellDef=\"let element\"\n              [attr.colspan]=\"displayedColumns.length\">\n              <ng-container *ngIf=\"!(error$ | async) && !loading\">\n                <span class=\"dc-content\">No Users</span>\n              </ng-container>\n              <ng-container *ngIf=\"(error$ | async) && !loading\">\n                <span class=\"dc-label\">System Failure</span>\n                <span class=\"dc-content\">Error</span>\n                <span class=\"retry\" (click)=\"retry()\">Retry</span>\n              </ng-container>\n              <ng-container *ngIf=\"loading\">\n                  <span class=\"dc-label\">Retrieving data...</span>  \n                </ng-container>\n            </td>\n          </ng-container>\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <ng-container *ngIf=\"userTotal && !loading\">\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"user-row\"></tr>\n        </ng-container>\n        <ng-container *ngIf=\"!userTotal || loading\">\n          <tr mat-row *matRowDef=\"let row; columns: ['noData'];\"class=\"no-data-row\" ></tr>\n        </ng-container>\n      </table>\n\n      <mat-paginator\n        #paginator\n        [length]=\"userTotal\"\n        [pageSize]=\"10\"\n        [pageSizeOptions]=\"[5, 10, 25, 100]\"\n        aria-label=\"Select page\"\n        showFirstLastButtons\n      >\n      </mat-paginator>\n    </div>\n  </mat-card>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}